{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Assignment 2\"\n",
        "author: \"Vishwamber Reddy\"\n",
        "date: \"11 May 2025\"\n",
        "format: html\n",
        "default-language: r\n",
        "execute:\n",
        "  echo: true\n",
        "  eval: false\n",
        "---\n",
        "\n",
        "\n",
        "## Objectives\n",
        "\n",
        "This guide demonstrates the use of Git, GitHub, and the command-line interface for collaborative and reproducible practices, using a basic RStudio project setup.\n",
        "\n",
        "## 1. Create a New RStudio Project\n",
        "\n",
        "I created a new RStudio Project named 5513_Assignment2.\n",
        "\n",
        "Inside the project folder, I created a file named example.qmd\n",
        "\n",
        "### Knit to HTML\n",
        "\n",
        "I used the **Render** button in RStudio to knit `example.qmd` into HTML. The output file `example.html` was successfully generated and previewed.\n",
        "\n",
        "![Knitted HTML Output](Images/example_output.png)\n",
        "\n",
        "## 2. Initialise Git Repository and Push to GitHub\n",
        "\n",
        "In the terminal:\n",
        "\n",
        "\n",
        "```{bash}\n",
        "cd 5513_Assignment2\n",
        "git init\n",
        "git add .\n",
        "git commit -m \"Initial commit with Quarto file\"\n",
        "```\n",
        "\n",
        "\n",
        "### Create GitHub Repository\n",
        "\n",
        "I created a new repository on GitHub named assignment2-etcs5513, then added the remote:\n",
        "\n",
        "\n",
        "```{bash}\n",
        "git remote add origin <https://github.com/vishwamber7/assignment2-etcs5513.git>\n",
        "git branch -M main\n",
        "git push -u origin main\n",
        "```\n",
        "\n",
        "\n",
        "## 3. Create a Branch and Modify File\n",
        "\n",
        "\n",
        "```{bash}\n",
        "git checkout -b testbranch\n",
        "```\n",
        "\n",
        "\n",
        "I modified example.qmd by adding this line under the existing text:\n",
        "\n",
        "\"This line was added in testbranch.\"\n",
        "\n",
        "Then:\n",
        "\n",
        "\n",
        "```{bash}\n",
        "git add example.qmd\n",
        "git commit -m \"Modified example.qmd in testbranch\"\n",
        "git push -u origin testbranch\n",
        "```\n",
        "\n",
        "\n",
        "## 4. Add Data Folder and Amend Commit\n",
        "\n",
        "I created a folder called data and added the CSV file from Assignment 1.\n",
        "\n",
        "\n",
        "```{bash}\n",
        "mkdir data \n",
        "cp ../etc5513-assignment-1-vishwamber7Assignment1/modern-renewable-prod.csv data/\n",
        "git add data/modern-renewable-prod.csv\n",
        "git commit --amend --no-edit\n",
        "git push --force\n",
        "```\n",
        "\n",
        "\n",
        "## 5. Conflict Setup in main Branch\n",
        "\n",
        "Switching back to main:\n",
        "\n",
        "\n",
        "```{bash}\n",
        "git checkout main\n",
        "```\n",
        "\n",
        "\n",
        "I edited example.qmd differently by changing the same section modified in testbranch:\n",
        "\n",
        "\"This line was added in main branch and will conflict.\"\n",
        "\n",
        "Then:\n",
        "\n",
        "\n",
        "```{bash}\n",
        "git add example.qmd\n",
        "git commit -m \"Conflicting change in example.qmd in main\"\n",
        "git push\n",
        "```\n",
        "\n",
        "\n",
        "## 6. Merge Branch and Fix Conflict\n",
        "\n",
        "\n",
        "```{bash}\n",
        "git merge testbranch\n",
        "```\n",
        "\n",
        "\n",
        "This created a merge conflict in example.qmd. Git output:\n",
        "\n",
        "Auto-merging example.qmd \\\n",
        "CONFLICT (content): Merge conflict in example.qmd \\\n",
        "Automatic merge failed; fix conflicts and then commit the result.\n",
        "\n",
        "I opened example.qmd and resolved the conflict manually:\n",
        "\n",
        "\"This line includes content from both branches.\"\n",
        "\n",
        "Then:\n",
        "\n",
        "\n",
        "```{bash}\n",
        "git add example.qmd\n",
        "git commit -m \"Resolved merge conflict between main and testbranch\"\n",
        "git push\n",
        "```\n",
        "\n",
        "\n",
        "Conflict resolved and pushed to GitHub.\n",
        "\n",
        "## 7. Tag Commit\n",
        "\n",
        "\n",
        "```{bash}\n",
        "git tag -a v1.0 -m \"Version 1.0 release after merge\"\n",
        "git push origin v1.0\n",
        "```\n",
        "\n",
        "\n",
        "## 8. Delete Branch\n",
        "\n",
        "\n",
        "```{bash}\n",
        "git branch -d testbranch\n",
        "git push origin --delete testbranch\n",
        "```\n",
        "\n",
        "\n",
        "testbranch deleted locally and remotely.\n",
        "\n",
        "## 9. Condensed Git Log\n",
        "\n",
        "\n",
        "```{bash}\n",
        "git log --oneline\n",
        "```\n",
        "\n",
        "\n",
        "Output:\n",
        "\n",
        "a70ec5e (HEAD -\\> main, tag: v1.0, origin/main) Resolved merge conflict between main and testbranch\\\n",
        "a70d25b Conflicting change in example.qmd in main \\\n",
        "f3dee0b Modified example.qmd in testbranch \\\n",
        "5caaed0 Initial commit with Quarto file\n",
        "\n",
        "## 10. Add Plot and Undo Commit\n",
        "\n",
        "I added the following to example.qmd:\n",
        "\n",
        "![Example Plot Code](Images/example_plot.png)\n",
        "\n",
        "Then:\n",
        "\n",
        "\n",
        "```{bash}\n",
        "git add example.qmd \n",
        "git commit -m \"Added simple plot to example.qmd\"\n",
        "```\n",
        "\n",
        "\n",
        "To undo the commit but keep changes:\n",
        "\n",
        "\n",
        "```{bash}\n",
        "git reset --soft HEAD~1 \n",
        "```\n",
        "\n",
        "\n",
        "The commit was undone, but changes remained in the working directory.\n",
        "\n",
        "## Summary of Git Skills Demonstrated\n",
        "\n",
        "-   Git init, add, commit\n",
        "\n",
        "-   Pushing to GitHub\n",
        "\n",
        "-   Branching and merging\n",
        "\n",
        "-   Conflict resolution\n",
        "\n",
        "-   Amending commits\n",
        "\n",
        "-   Using tags\n",
        "\n",
        "-   Deleting branches\n",
        "\n",
        "-   Condensed git logs\n",
        "\n",
        "-   Undoing commits with reset\n",
        "\n",
        "## Clear Commit Messages\n",
        "\n",
        "-   Commit messages were concise and descriptive:\n",
        "\n",
        "-   Initial commit with Quarto file\n",
        "\n",
        "-   Modified example.qmd in testbranch\n",
        "\n",
        "-   Conflicting change in example.qmd in main\n",
        "\n",
        "-   Resolved merge conflict between main and testbranch\n",
        "\n",
        "-   Added simple plot to example.qmd\n",
        "\n",
        "## Conclusion\n",
        "\n",
        "This guide demonstrates essential collaborative Git practices, including conflict resolution, branching, tagging, and commit management, ensuring reproducibility and clean version history in data science projects."
      ],
      "id": "b4abb8fc"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}